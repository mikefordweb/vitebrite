{"version":3,"file":"main.d36bd89ec31a1eb4dfb6.hot-update.js","sources":["webpack:////Users/michaelford/Desktop/ViteBrite07102019/vitebrite/src/js/App.jsx","webpack:////Users/michaelford/Desktop/ViteBrite07102019/vitebrite/src/js/Root.jsx","webpack:////Users/michaelford/Desktop/ViteBrite07102019/vitebrite/src/js/search/Search.jsx","webpack:////Users/michaelford/Desktop/ViteBrite07102019/vitebrite/src/js/search/spot-list/SpotList.jsx"],"sourcesContent":["/* eslint-disable react/jsx-no-bind */\nimport {hot} from 'react-hot-loader/root';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Route,\n    Switch\n} from 'react-router-dom';\nimport Checkout from 'checkout/Checkout';\nimport Confirmation from 'confirmation/Confirmation';\nimport Search from 'search/Search';\n\nconst App = ({\n    events\n}) => {\n    return (\n        <Switch>\n            <Route\n                exact\n                path=\"/\"\n                render={() => {\n                    return <Search events={events} />;\n                }}\n            />\n            <Route\n                path=\"/checkout\"\n                component={Checkout}\n            />\n            <Route\n                path=\"/confirmation\"\n                component={Confirmation}\n            />\n        </Switch>\n    );\n};\n\nApp.propTypes = {\n    events: PropTypes.arrayOf(PropTypes.object).isRequired\n};\n\nexport default hot(App);\n","import React, {Component} from 'react';\nimport {Provider} from 'react-redux';\nimport {ConnectedRouter} from 'connected-react-router';\nimport axios from 'axios';\nimport createStore, {getHistory} from 'store/store';\nimport App from './App';\n\nexport default class Root extends Component {\n    state = {\n        isLoading: true,\n        events: []\n    };\n\n    componentDidMount() {\n        this._loadSpots();\n    }\n\n    async _loadSpots() {\n        try {\n            const {\n                data\n            } = await axios.get('/events');\n\n            this.setState({\n                isLoading: false,\n                events: data\n            });\n        } catch (error) {\n            console.log('Error loading spot data: ', error); // eslint-disable-line no-console\n        }\n    }\n\n    render() {\n        const {\n            isLoading,\n            events\n        } = this.state;\n\n        if (isLoading) {\n            return (\n                <div className=\"Root-loader\">\n                    Loading...\n                </div>\n            );\n        }\n\n        return (\n            <div className=\"Root\">\n                <Provider store={createStore()}>\n                    <ConnectedRouter history={getHistory()}>\n                        <App events={events} />\n                    </ConnectedRouter>\n                </Provider>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport {updateSelected} from 'spot/spot-actions';\nimport SpotList from './spot-list/SpotList';\n\nconst Search = ({\n    selectedSpot,\n    events,\n    setSpot\n}) => {\n    if (selectedSpot === null) {\n        selectedSpot = {};\n    }\n    return (\n        <div className=\"Search\">\n            <SpotList\n                events={events}\n                selectedSpot={selectedSpot}\n                setSpot={setSpot}\n            />\n            <div className=\"Search-content\" />\n        </div>\n    );\n};\n\nSearch.propTypes = {\n    selectedSpot: PropTypes.object,\n    events: PropTypes.arrayOf(PropTypes.object).isRequired,\n    setSpot: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => {\n    const {\n        spot: {\n            selected: selectedSpot\n        }\n    } = state;\n\n    return {\n        selectedSpot\n    };\n};\n\nconst mapDispatchToProps = {\n    setSpot: updateSelected\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);\n","import React, {PureComponent} from 'react';\nimport PropTypes from 'prop-types';\nimport TextButton from 'common/TextButton';\nimport SpotItem from 'spot/SpotItem';\nimport ReactModal from 'react-modal';\nimport {push} from 'connected-react-router';\n\nexport default class SpotList extends PureComponent {\n    static propTypes = {\n        selectedSpot: PropTypes.object,\n        events: PropTypes.arrayOf(PropTypes.object).isRequired,\n        setSpot: PropTypes.func.isRequired\n    };\n\n    constructor () {\n        super();\n        this.state = {\n          showGetModal: false,\n          showPostModal: false\n        };\n        this._onHandleCloseGetModal = this._onHandleCloseGetModal.bind(this);\n        this._onHandleClosePostModal = this._onHandleClosePostModal.bind(this);\n        this._onShowPostModal = this._onShowPostModal.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    _onDetailsClick = spot => {\n        this.props.setSpot(spot);\n        this.setState({ showGetModal: true });\n    }\n\n    _onShowPostModal () {\n        this.setState({ showGetModal: false });\n        this.setState({ showPostModal: true });\n    }\n\n    _onHandleCloseGetModal () {\n        this.setState({ showGetModal: false });\n    }\n\n    _onHandleClosePostModal () {\n        this.setState({ showPostModal: false });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        push('/checkout');\n        console.log('handleSubmit');\n    }\n\n    render() {\n        const { selectedSpot, events } = this.props;\n\n        return (\n            <div className=\"SpotList\">\n                <div className=\"SpotList-feature\">\n                    <div className=\"SpotList-breadcrumbs\">\n                        <TextButton>Chicago</TextButton> &gt; Millennium Park\n                    </div>\n                    <h1>Millennium Park</h1>\n                    <p>{events.length} Spots Available</p>\n                </div>\n                <ReactModal \n                    isOpen={this.state.showPostModal}\n                    contentLabel=\"Post Modal\"\n                    ariaHideApp={false}\n                    className=\"vitebrite-post\"\n                    closeTimeoutMS={2000}\n                >\n                    <div className=\"modal-post-header\">\n                        <a href=\"\" className=\"modal-post-back\" onClick={this._onHandleClosePostModal}>Back to Search</a>\n                    </div>\n                        <img className=\"modal-post-image\" src={selectedSpot.image}></img>\n                        <div className=\"modal-post-title\">\n                            <div className=\"modal-post-title-text\">{selectedSpot.title}</div>\n                            <div className=\"modal-post-title-distance\">{selectedSpot.distance}</div>\n                        </div>\n                        <div className=\"modal-post-form-hr\"></div>\n                        \n                        <form onSubmit={this.handleSubmit}>\n                            <label forhtml=\"first-name\" className=\"modal-post-label first-name-label\">First Name</label>\n                            <input name=\"first-name\" className=\"first-name modal-post-input\"></input>\n\n                            <label forhtml=\"last-name\" className=\"modal-post-label last-name-label\">Last Name</label>\n                            <input name=\"last-name\" className=\"modal-post-input\"></input>\n\n                            <label forhtml=\"email\" className=\"modal-post-label email-label\">Email</label>\n                            <input name=\"email\" className=\"modal-post-input\"></input>\n                            \n                            <label forhtml=\"phone\" className=\"modal-post-label phone-label\">Phone Number</label>\n                            <input name=\"phone\" className=\"modal-post-input\"></input>\n\n                            <input type=\"submit\" value={(selectedSpot.price / 100).toFixed(2)} className=\"purchase-btn\" />\n                        </form>\n                    \n                </ReactModal>\n                <ReactModal \n                    isOpen={this.state.showGetModal}\n                    contentLabel=\"Get Modal\"\n                    ariaHideApp={false}\n                    className=\"vitebrite-modal\"\n                    closeTimeoutMS={2000}\n                >\n                    <a href=\"#\" \n                        className=\"modal-close\" \n                        onClick={this._onHandleCloseGetModal}>X</a>\n                    <div className=\"modal-title modal-text\">Spot Details</div>\n                    <div className=\"modal-address modal-text\">{selectedSpot.title}</div>\n                    <div className=\"modal-description\">{selectedSpot.description}</div>\n                    <a href=\"#\" className=\"bookit-btn\" onClick={this._onShowPostModal}>\n                    ${(selectedSpot.price / 100).toFixed(2)} | Book it!</a>\n                </ReactModal>\n                \n                <div className=\"SpotList-events\">\n                    {events.map(spot => {\n                        return (\n                            <SpotItem\n                                key={spot.id}\n                                data={spot}\n                                isSelected={selectedSpot && selectedSpot.id === spot.id}\n                                onDetailsClick={this._onDetailsClick}\n                            />\n                            \n                        );\n                    })}\n                </div>\n\n            </div>\n        );\n    }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AACA;AALA;AAQA;AACA;AAFA;AAKA;AACA;AAFA;AAMA;AACA;AACA;AACA;AADA;AACA;AAGA;AACA;AADA;;;;;;;;;;AA5BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AAFA;AACA;;;;;;AAIA;AACA;AACA;;;;;;;;;;;;;;;AAMA;AACA;;;AAFA;AAGA;AACA;AACA;AAFA;;;;;;;AAKA;AACA;;;;;;;;;;;;;;;;;AAGA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AAAA;AAIA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;;;;;;;;;;;AAhDA;AACA;AADA;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAHA;AAKA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AAAA;AAOA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AACA;AAGA;AACA;AADA;;;;;;;;;;AA1CA;AA0BA;AAYA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAOA;AAAA;AACA;AADA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAaA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAdA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AATA;AAUA;AACA;;;AAMA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;;;AAEA;AACA;AAAA;AAAA;AACA;;;AAEA;AACA;AAAA;AAAA;AACA;;;AAEA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAGA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAOA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AAFA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAIA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AAJA;AAQA;AAKA;;;;;;;;;;;AA1HA;AACA;AADA;AAEA;AACA;AACA;AAHA;AACA;AAFA;;;;;;;;;;AAAA;;;;;;;;;;;;;A","sourceRoot":""}