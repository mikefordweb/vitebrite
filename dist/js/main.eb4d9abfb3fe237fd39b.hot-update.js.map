{"version":3,"file":"main.eb4d9abfb3fe237fd39b.hot-update.js","sources":["webpack:////Users/michaelford/Desktop/ViteBrite07102019/vitebrite/src/js/App.jsx","webpack:////Users/michaelford/Desktop/ViteBrite07102019/vitebrite/src/js/Root.jsx","webpack:////Users/michaelford/Desktop/ViteBrite07102019/vitebrite/src/js/confirmation/Confirmation.jsx","webpack:////Users/michaelford/Desktop/ViteBrite07102019/vitebrite/src/js/event/EventItem.jsx","webpack:////Users/michaelford/Desktop/ViteBrite07102019/vitebrite/src/js/event/event-actions.js","webpack:////Users/michaelford/Desktop/ViteBrite07102019/vitebrite/src/js/event/event-reducer.js","webpack:////Users/michaelford/Desktop/ViteBrite07102019/vitebrite/src/js/search/Search.jsx","webpack:////Users/michaelford/Desktop/ViteBrite07102019/vitebrite/src/js/search/event-list/EventList.jsx","webpack:////Users/michaelford/Desktop/ViteBrite07102019/vitebrite/src/js/store/reducers.js"],"sourcesContent":["/* eslint-disable react/jsx-no-bind */\nimport {hot} from 'react-hot-loader/root';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Route,\n    Switch\n} from 'react-router-dom';\nimport Checkout from 'checkout/Checkout';\nimport Confirmation from 'confirmation/Confirmation';\nimport Search from 'search/Search';\n\nconst App = ({\n    spots\n}) => {\n    return (\n        <Switch>\n            <Route\n                exact\n                path=\"/\"\n                render={() => {\n                    return <Search spots={spots} />;\n                }}\n            />\n            <Route\n                path=\"/checkout\"\n                component={Checkout}\n            />\n            <Route\n                path=\"/confirmation\"\n                component={Confirmation}\n            />\n        </Switch>\n    );\n};\n\nApp.propTypes = {\n    spots: PropTypes.arrayOf(PropTypes.object).isRequired\n};\n\nexport default hot(App);\n","import React, {Component} from 'react';\nimport {Provider} from 'react-redux';\nimport {ConnectedRouter} from 'connected-react-router';\nimport axios from 'axios';\nimport createStore, {getHistory} from 'store/store';\nimport App from './App';\n\nexport default class Root extends Component {\n    state = {\n        isLoading: true,\n        events: []\n    };\n\n    componentDidMount() {\n        this._loadEvents();\n    }\n\n    async _loadEvents() {\n        try {\n            const {\n                data\n            } = await axios.get('/events');\n\n            this.setState({\n                isLoading: false,\n                events: data\n            });\n        } catch (error) {\n            console.log('Error loading event data: ', error); // eslint-disable-line no-console\n        }\n    }\n\n    render() {\n        const {\n            isLoading,\n            events\n        } = this.state;\n\n        if (isLoading) {\n            return (\n                <div className=\"Root-loader\">\n                    Loading...\n                </div>\n            );\n        }\n\n        return (\n            <div className=\"Root\">\n                <Provider store={createStore()}>\n                    <ConnectedRouter history={getHistory()}>\n                        <App events={events} />\n                    </ConnectedRouter>\n                </Provider>\n            </div>\n        );\n    }\n}\n","import React, {PureComponent} from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport {push} from 'connected-react-router';\nimport Button from 'common/Button';\nimport Image from 'common/Image';\n\nclass Confirmation extends PureComponent {\n    static propTypes = {\n        email: PropTypes.string.isRequired,\n        selectedEvent: PropTypes.object,\n        pushTo: PropTypes.func.isRequired\n    };\n\n    constructor(props) {\n        super(props);\n\n        const {\n            selectedEvent,\n            pushTo\n        } = props;\n\n        // if you refresh on conirmation and there isn't a selectedEvent, make sure to go back to search and render nothing here\n        if (!selectedEvent) {\n            pushTo('/');\n        }\n    }\n\n    _onPurchaseAnotherClick = evt => {\n        const {\n            pushTo,\n        } = this.props;\n\n        pushTo('/');\n    }\n\n    render() {\n        const {\n            email,\n            selectedEvent\n        } = this.props;\n\n        if (!selectedEvent) {\n            return null;\n        }\n\n        return (\n            <div className=\"Confirmation\">\n                <h1>Park it like its hot!</h1>\n                <p>You successfully purchased parking at <strong>{selectedEvent.title}</strong> for <strong>${(selectedEvent.price / 100).toFixed(2)}</strong>.</p>\n                <Image src={selectedEvent.image} />\n                <p>We emailed a receipt to <a href={`mailto:${email}`}>{email}</a>.</p>\n                <Button\n                    color=\"primary\"\n                    onClick={this._onPurchaseAnotherClick}\n                >\n                    Purchase Another Event!\n                </Button>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const {\n        checkout: {\n            email\n        },\n        event: {\n            selected: selectedEvent\n        }\n    } = state;\n\n    return {\n        email,\n        selectedEvent\n    };\n};\n\nconst mapDispatchToProps = {\n    pushTo: push,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Confirmation);\n","import React, {PureComponent} from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Image from 'common/Image';\nimport TextButton from 'common/TextButton';\n\nexport default class EventItem extends PureComponent {\n    static propTypes = {\n        showDetails: PropTypes.bool,\n        isSelected: PropTypes.bool,\n        data: PropTypes.object.isRequired,\n        onDetailsClick: PropTypes.func\n    };\n    static defaultProps = {\n        showDetails: true\n    };\n\n    _onDetailsClick = evt => {\n        const {\n            data,\n            onDetailsClick\n        } = this.props;\n\n        onDetailsClick(data);\n    }\n\n    render() {\n        const {\n            showDetails,\n            isSelected,\n            data: {\n                image,\n                distance,\n                title\n            }\n        } = this.props;\n        const classes = classNames(\n            'EventItem',\n            {'EventItem-selected': isSelected}\n        );\n\n        return (\n            <div className={classes}>\n                <Image src={image} />\n                <div className=\"EventItem-info\">\n                    <h2>{title}</h2>\n                    <p>{distance}</p>\n                    {showDetails && <TextButton onClick={this._onDetailsClick}>Details</TextButton>}\n                </div>\n            </div>\n        );\n    }\n}\n","export const EVENT_UPDATE_SELECTED = 'EVENT_UPDATE_SELECTED';\nexport const EVENT_PURCHASE = 'EVENT_PURCHASE';\n\nexport const updateSelected = event => {\n    return {\n        type: EVENT_UPDATE_SELECTED,\n        payload: event\n    };\n};\n\nexport const purchase = data => {\n    return {\n        type: EVENT_PURCHASE,\n        payload: data\n    };\n};\n","import {EVENT_UPDATE_SELECTED} from './event-actions';\n\nconst initialState = {\n    selected: null\n};\n\nexport default function event(state = initialState, {type, payload}) {\n    switch (type) {\n        case EVENT_UPDATE_SELECTED: {\n            return {\n                ...state,\n                selected: payload || null\n            };\n        }\n\n        default:\n            return state;\n    }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport {updateSelected} from 'event/event-actions';\nimport EventList from './event-list/EventList';\n\nconst Search = ({\n    selectedEvent,\n    events,\n    setEvent\n}) => {\n    if (selectedEvent === null) {\n        selectedEvent = {};\n    }\n    return (\n        <div className=\"Search\">\n            <EventList\n                events={events}\n                selectedEvent={selectedEvent}\n                setEvent={setEvent}\n            />\n            <div className=\"Search-content\" />\n        </div>\n    );\n};\n\nSearch.propTypes = {\n    selectedEvent: PropTypes.object,\n    events: PropTypes.arrayOf(PropTypes.object).isRequired,\n    setEvent: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => {\n    const {\n        event: {\n            selected: selectedEvent\n        }\n    } = state;\n\n    return {\n        selectedEvent\n    };\n};\n\nconst mapDispatchToProps = {\n    setEvent: updateSelected\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);\n","import React, {PureComponent} from 'react';\nimport PropTypes from 'prop-types';\nimport TextButton from 'common/TextButton';\nimport EventItem from 'event/EventItem';\nimport ReactModal from 'react-modal';\nimport {push} from 'connected-react-router';\n\nexport default class EventList extends PureComponent {\n    static propTypes = {\n        selectedEvent: PropTypes.object,\n        events: PropTypes.arrayOf(PropTypes.object).isRequired,\n        setEvent: PropTypes.func.isRequired\n    };\n\n    constructor () {\n        super();\n        this.state = {\n          showGetModal: false,\n          showPostModal: false\n        };\n        this._onHandleCloseGetModal = this._onHandleCloseGetModal.bind(this);\n        this._onHandleClosePostModal = this._onHandleClosePostModal.bind(this);\n        this._onShowPostModal = this._onShowPostModal.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    _onDetailsClick = event => {\n        this.props.setEvent(event);\n        this.setState({ showGetModal: true });\n    }\n\n    _onShowPostModal () {\n        this.setState({ showGetModal: false });\n        this.setState({ showPostModal: true });\n    }\n\n    _onHandleCloseGetModal () {\n        this.setState({ showGetModal: false });\n    }\n\n    _onHandleClosePostModal () {\n        this.setState({ showPostModal: false });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        push('/checkout');\n        console.log('handleSubmit');\n    }\n\n    render() {\n        const { selectedEvent, events } = this.props;\n\n        return (\n            <div className=\"EventList\">\n                <div className=\"EventList-feature\">\n                    <div className=\"EventList-breadcrumbs\">\n                        <TextButton>Chicago</TextButton> &gt; Millennium Park\n                    </div>\n                    <h1>Millennium Park</h1>\n                    <p>{events.length} Events Available</p>\n                </div>\n                <ReactModal \n                    isOpen={this.state.showPostModal}\n                    contentLabel=\"Post Modal\"\n                    ariaHideApp={false}\n                    className=\"vitebrite-post\"\n                    closeTimeoutMS={2000}\n                >\n                    <div className=\"modal-post-header\">\n                        <a href=\"\" className=\"modal-post-back\" onClick={this._onHandleClosePostModal}>Back to Search</a>\n                    </div>\n                        <img className=\"modal-post-image\" src={selectedEvent.image}></img>\n                        <div className=\"modal-post-title\">\n                            <div className=\"modal-post-title-text\">{selectedEvent.title}</div>\n                            <div className=\"modal-post-title-distance\">{selectedEvent.distance}</div>\n                        </div>\n                        <div className=\"modal-post-form-hr\"></div>\n                        \n                        <form onSubmit={this.handleSubmit}>\n                            <label forhtml=\"first-name\" className=\"modal-post-label first-name-label\">First Name</label>\n                            <input name=\"first-name\" className=\"first-name modal-post-input\"></input>\n\n                            <label forhtml=\"last-name\" className=\"modal-post-label last-name-label\">Last Name</label>\n                            <input name=\"last-name\" className=\"modal-post-input\"></input>\n\n                            <label forhtml=\"email\" className=\"modal-post-label email-label\">Email</label>\n                            <input name=\"email\" className=\"modal-post-input\"></input>\n                            \n                            <label forhtml=\"phone\" className=\"modal-post-label phone-label\">Phone Number</label>\n                            <input name=\"phone\" className=\"modal-post-input\"></input>\n\n                            <input type=\"submit\" value={(selectedEvent.price / 100).toFixed(2)} className=\"purchase-btn\" />\n                        </form>\n                    \n                </ReactModal>\n                <ReactModal \n                    isOpen={this.state.showGetModal}\n                    contentLabel=\"Get Modal\"\n                    ariaHideApp={false}\n                    className=\"vitebrite-modal\"\n                    closeTimeoutMS={2000}\n                >\n                    <a href=\"#\" \n                        className=\"modal-close\" \n                        onClick={this._onHandleCloseGetModal}>X</a>\n                    <div className=\"modal-title modal-text\">Event Details</div>\n                    <div className=\"modal-address modal-text\">{selectedEvent.title}</div>\n                    <div className=\"modal-description\">{selectedEvent.description}</div>\n                    <a href=\"#\" className=\"bookit-btn\" onClick={this._onShowPostModal}>\n                    ${(selectedEvent.price / 100).toFixed(2)} | Book it!</a>\n                </ReactModal>\n                \n                <div className=\"EventList-events\">\n                    {events.map(event => {\n                        return (\n                            <EventItem\n                                key={event.id}\n                                data={event}\n                                isSelected={selectedEvent && selectedEvent.id === event.id}\n                                onDetailsClick={this._onDetailsClick}\n                            />\n                            \n                        );\n                    })}\n                </div>\n\n            </div>\n        );\n    }\n}\n","import {combineReducers} from 'redux';\nimport {connectRouter} from 'connected-react-router';\nimport event from 'event/event-reducer';\n\nexport default history => combineReducers({\n    event,\n    router: connectRouter(history),\n});\n"],"mappings":"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","sourceRoot":""}